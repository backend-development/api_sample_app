---
swagger: '2.0'
info:
  title: API V0
  version: v0
  description: This is the basic version of my API
securityDefinitions:
  Bearer:
    description: JWT for this API
    type: apiKey
    name: Authorization
    in: header
paths:
  "/api/v0/money_transactions":
    get:
      summary: list all the MoneyTransaction
      tags:
      - MoneyTransaction
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: successful
          schema:
            type: array
            items:
              type: object
              properties:
                amount:
                  type: string
                paid_at:
                  type: string
                  nullable: true
              required:
              - amount
        '401':
          description: wrong token no data
          examples:
            application/json:
              error: Signature verification raised
  "/api/v0/money_transactions/{id}":
    get:
      summary: show user
      tags:
      - MoneyTransaction
      security:
      - Bearer: {}
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: successful
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - money_transaction
                  attributes:
                    type: object
                    properties:
                      amount:
                        type: string
                      paid_at:
                        type: string
                        format: date
                    required:
                    - amount
                  relationships:
                    type: object
                    properties:
                      creditor:
                        type: object
                      debitor:
                        type: object
                    required:
                    - creditor
                    - debitor
                required:
                - id
                - type
                - attributes
                - relationships
  "/api/v0/users":
    get:
      summary: list all the users
      tags:
      - User
      produces:
      - application/json
      security:
      - Bearer: {}
      responses:
        '200':
          description: successful
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required:
              - name
              - email
        '401':
          description: wrong token no data
          examples:
            application/json:
              error: Signature verification raised
  "/api/v0/users/{id}":
    get:
      summary: show user
      tags:
      - User
      security:
      - Bearer: {}
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: successful
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
            required:
            - name
            - email
  "/users.json":
    get:
      summary: list all the users
      tags:
      - Legacy
      produces:
      - abpplication/json
      responses:
        '200':
          description: successful
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                email:
                  type: string
              required:
              - id
              - name
              - email
  "/users/{id}.json":
    get:
      summary: show user
      tags:
      - Legacy
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: successful
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              email:
                type: string
            required:
            - id
            - name
            - email
  "/users/sign_in.json":
    post:
      summary: log in as existing user, get jwt
      tags:
      - Login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
      responses:
        '201':
          description: user logged in
          headers:
            Authorization:
              type: string
              description: new JWT
          examples:
            application/json:
              id: 507602454
              email: greef@bountyhunters.com
              created_at: '2021-03-10T09:38:42.332Z'
              updated_at: '2021-03-10T09:38:42.332Z'
              name: greef
              jti: f4d270f8-3b36-404a-997d-023117046b73
        '401':
          description: login failed
          examples:
            application/json:
              error: Invalid Email or password.
