---
swagger: '2.0'
info:
  title: API V1
  version: v1
  description: This is the first version of my API
paths:
  "/users.json":
    get:
      summary: list all the users
      tags:
      - Legacy
      produces:
      - abpplication/json
      responses:
        '200':
          description: successful
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                email:
                  type: string
              required:
              - id
              - name
              - email
  "/users/{id}.json":
    get:
      summary: show user
      tags:
      - Legacy
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: successful
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              email:
                type: string
            required:
            - id
            - name
            - email
  "/api/v1/users":
    get:
      summary: list all the users
      tags:
      - User
      produces:
      - abpplication/json
      responses:
        '200':
          description: successful
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                      required:
                      - name
                      - email
                  required:
                  - id
                  - type
                  - attributes
    post:
      summary: Creates a user
      tags:
      - User
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
      responses:
        '201':
          description: user created
        '422':
          description: password can't be blank, name can't exist, e-mail can't exist
  "/api/v1/users/{id}":
    get:
      summary: show user
      tags:
      - User
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: successful
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                    required:
                    - name
                    - email
                required:
                - id
                - type
                - attributes
    patch:
      summary: Updates a users data
      tags:
      - User
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: user
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: user updated
    delete:
      summary: Deletes a users
      tags:
      - User
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '204':
          description: user updated
